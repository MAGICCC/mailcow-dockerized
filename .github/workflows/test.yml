name: Build mailcow Docker Images

on:
  push:
    branches: [ "master", "staging" ]
  workflow_dispatch:

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  targets:
      name: Generate targets list
      runs-on: ubuntu-latest
      outputs:
        matrix: ${{ steps.targets.outputs.matrix }}
      steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'mailcow/mailcow-dockerized'
          ref: 'master'
      
      - name: Prepare bake file
        run: |
          cp -v helper-scripts/docker-compose.override.yml.d/BUILD_FLAGS/docker-compose.override.yml docker-compose.preride.yml
          docker compose -f docker-compose.yml -f docker-compose.preride.yml config > docker-compose.override.yml
          rm -v docker-compose.yml && mv -v docker-compose.override.yml docker-compose.yml
        
      - name: Create matrix
        id: targets
        run: |
          BAKE_DEFINITIONS=$(docker buildx bake --print)
          TARGETS=$(echo "$BAKE_DEFINITIONS" | jq -cr ".group.default.targets")
          TAGS=$(echo "$BAKE_DEFINITIONS" | jq -c '{ target: ( .target | with_entries(select(.value.tags) | {key: .key, value: .value.tags[0]} ) ) }')
    
          echo "matrix=$TARGETS" >> $GITHUB_OUTPUT
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "test echos"
          cat $GITHUB_OUTPUT
        
      - name: Show matrix + tags
        run: |
          echo ${{ steps.targets.outputs.matrix }}
          echo ${{ steps.targets.outputs.tags }}
      
      
  build:
      name: Build
      runs-on: ubuntu-latest
      needs:
      - targets
      
      strategy:
        fail-fast: false
        matrix:
          target: ${{ fromJson(needs.targets.outputs.matrix) }}
     
      steps:
       - name: Checkouts
         uses: actions/checkout@v4
         with:
           repository: 'mailcow/mailcow-dockerized'
           ref: 'master'
      
       - name: Set up QEMU
         uses: docker/setup-qemu-action@v3

       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v3

       - name: Login to GHCR
         if: github.event_name != 'pull_request'
         uses: docker/login-action@v3
         with:
           registry: ghcr.io
           username: ${{ github.repository_owner }}
           password: ${{ secrets.GITHUB_TOKEN }}
      
       - name: Prepare bake file
         run: |
          cp -v helper-scripts/docker-compose.override.yml.d/BUILD_FLAGS/docker-compose.override.yml docker-compose.preride.yml
          docker compose -f docker-compose.yml -f docker-compose.preride.yml config > docker-compose.override.yml
          rm -v docker-compose.yml && mv -v docker-compose.override.yml docker-compose.yml

       - name: Show tags for debugging
         run: |
           echo "${{ needs.targets.outputs.matrix }}"
        
       - name: Build images (linux/amd64)
         uses: docker/bake-action@v6
         with:
           source: .
           targets: ${{ matrix.target }}
           push: false
           set: |
             *.platform=linux/amd64
             *.tags=${{ fromJson(needs.targets.outputs.tags).target[matrix.target] }}
             
       - name: Build images (linux/arm64)
         uses: docker/bake-action@v6
         with:
           source: .
           targets: ${{ matrix.target }}
           push: false
           set: |
             *.platform=linux/arm64
             *.tags=${{ fromJson(needs.targets.outputs.tags).target[matrix.target] }}
